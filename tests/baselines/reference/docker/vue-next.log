Exit Code: 0
Standard output:

> @X.X.X build /vue-next
> node scripts/build.js "--types"
Rolling up type definitions for compiler-core...
Analysis will use the bundled TypeScript version 3.9.7
*** The target project appears to use TypeScript X.X.X-insiders.xxxxxxxx which is newer than the bundled compiler engine; consider upgrading API Extractor.
Writing: /vue-next/temp/compiler-core.api.json
The API report is up to date: temp/compiler-core.api.md
Writing package typings: /vue-next/packages/compiler-core/dist/compiler-core.d.ts
Writing package typings: /vue-next/dist/compiler-core.d.ts
API Extractor completed successfully.
Rolling up type definitions for compiler-dom...
Analysis will use the bundled TypeScript version 3.9.7
*** The target project appears to use TypeScript X.X.X-insiders.xxxxxxxx which is newer than the bundled compiler engine; consider upgrading API Extractor.
Writing: /vue-next/temp/compiler-dom.api.json
The API report is up to date: temp/compiler-dom.api.md
Writing package typings: /vue-next/packages/compiler-dom/dist/compiler-dom.d.ts
Writing package typings: /vue-next/dist/compiler-dom.d.ts
API Extractor completed successfully.
Rolling up type definitions for compiler-sfc...
Analysis will use the bundled TypeScript version 3.9.7
*** The target project appears to use TypeScript X.X.X-insiders.xxxxxxxx which is newer than the bundled compiler engine; consider upgrading API Extractor.
Writing: /vue-next/temp/compiler-sfc.api.json
The API report is up to date: temp/compiler-sfc.api.md
Writing package typings: /vue-next/packages/compiler-sfc/dist/compiler-sfc.d.ts
Writing package typings: /vue-next/dist/compiler-sfc.d.ts
API Extractor completed successfully.
Rolling up type definitions for compiler-ssr...
Analysis will use the bundled TypeScript version 3.9.7
*** The target project appears to use TypeScript X.X.X-insiders.xxxxxxxx which is newer than the bundled compiler engine; consider upgrading API Extractor.
Writing: /vue-next/temp/compiler-ssr.api.json
The API report is up to date: temp/compiler-ssr.api.md
Writing package typings: /vue-next/packages/compiler-ssr/dist/compiler-ssr.d.ts
Writing package typings: /vue-next/dist/compiler-ssr.d.ts
API Extractor completed successfully.



Standard error:

/vue-next/packages/compiler-core/src/index.ts → packages/compiler-core/dist/compiler-core.esm-bundler.js...
created packages/compiler-core/dist/compiler-core.esm-bundler.js in ?s
/vue-next/packages/compiler-core/src/index.ts → packages/compiler-core/dist/compiler-core.cjs.js...
created packages/compiler-core/dist/compiler-core.cjs.js in ?s
/vue-next/packages/compiler-core/src/index.ts → packages/compiler-core/dist/compiler-core.cjs.prod.js...
created packages/compiler-core/dist/compiler-core.cjs.prod.js in ?s
Warning: dist/packages/compiler-core/src/options.d.ts:36:25 - (tsdoc-escape-right-brace) The "}" character should be escaped using a backslash to avoid confusion with a TSDoc inline tag
Warning: dist/packages/compiler-core/src/options.d.ts:36:26 - (tsdoc-escape-right-brace) The "}" character should be escaped using a backslash to avoid confusion with a TSDoc inline tag
Warning: dist/packages/compiler-core/src/options.d.ts:36:19 - (tsdoc-malformed-inline-tag) Expecting a TSDoc tag starting with "{@"
Warning: dist/packages/compiler-core/src/options.d.ts:36:20 - (tsdoc-malformed-inline-tag) Expecting a TSDoc tag starting with "{@"
Warning: dist/packages/compiler-core/src/options.d.ts:59:39 - (tsdoc-escape-right-brace) The "}" character should be escaped using a backslash to avoid confusion with a TSDoc inline tag
Warning: dist/packages/compiler-core/src/options.d.ts:59:21 - (tsdoc-malformed-inline-tag) Expecting a TSDoc tag starting with "{@"
Warning: dist/packages/compiler-core/src/options.d.ts:80:42 - (tsdoc-escape-right-brace) The "}" character should be escaped using a backslash to avoid confusion with a TSDoc inline tag
Warning: dist/packages/compiler-core/src/options.d.ts:80:43 - (tsdoc-escape-right-brace) The "}" character should be escaped using a backslash to avoid confusion with a TSDoc inline tag
Warning: dist/packages/compiler-core/src/options.d.ts:80:35 - (tsdoc-malformed-inline-tag) Expecting a TSDoc tag starting with "{@"
Warning: dist/packages/compiler-core/src/options.d.ts:80:36 - (tsdoc-malformed-inline-tag) Expecting a TSDoc tag starting with "{@"
/vue-next/packages/compiler-dom/src/index.ts → packages/compiler-dom/dist/compiler-dom.esm-bundler.js...
created packages/compiler-dom/dist/compiler-dom.esm-bundler.js in ?s
/vue-next/packages/compiler-dom/src/index.ts → packages/compiler-dom/dist/compiler-dom.esm-browser.js...
created packages/compiler-dom/dist/compiler-dom.esm-browser.js in ?s
/vue-next/packages/compiler-dom/src/index.ts → packages/compiler-dom/dist/compiler-dom.cjs.js...
created packages/compiler-dom/dist/compiler-dom.cjs.js in ?s
/vue-next/packages/compiler-dom/src/index.ts → packages/compiler-dom/dist/compiler-dom.global.js...
created packages/compiler-dom/dist/compiler-dom.global.js in ?s
/vue-next/packages/compiler-dom/src/index.ts → packages/compiler-dom/dist/compiler-dom.esm-browser.prod.js...
created packages/compiler-dom/dist/compiler-dom.esm-browser.prod.js in ?s
/vue-next/packages/compiler-dom/src/index.ts → packages/compiler-dom/dist/compiler-dom.cjs.prod.js...
created packages/compiler-dom/dist/compiler-dom.cjs.prod.js in ?s
/vue-next/packages/compiler-dom/src/index.ts → packages/compiler-dom/dist/compiler-dom.global.prod.js...
(!) Missing global variable names
Use output.globals to specify browser global variable names corresponding to external modules
@babel/parser (guessing 'parser')
estree-walker (guessing 'estreeWalker')
created packages/compiler-dom/dist/compiler-dom.global.prod.js in ?s
/vue-next/packages/compiler-sfc/src/index.ts → packages/compiler-sfc/dist/compiler-sfc.cjs.js...
created packages/compiler-sfc/dist/compiler-sfc.cjs.js in ?s
/vue-next/packages/compiler-sfc/src/index.ts → packages/compiler-sfc/dist/compiler-sfc.global.js...
created packages/compiler-sfc/dist/compiler-sfc.global.js in ?s
/vue-next/packages/compiler-sfc/src/index.ts → packages/compiler-sfc/dist/compiler-sfc.esm-browser.js...
created packages/compiler-sfc/dist/compiler-sfc.esm-browser.js in ?s
/vue-next/packages/compiler-ssr/src/index.ts → packages/compiler-ssr/dist/compiler-ssr.cjs.js...
created packages/compiler-ssr/dist/compiler-ssr.cjs.js in ?s
/vue-next/packages/reactivity/src/index.ts → packages/reactivity/dist/reactivity.esm-bundler.js...
[!] (plugin rpt2) Error: /vue-next/packages/reactivity/src/collectionHandlers.ts(24,3): semantic error TS2322: Type 'T | DeepReadonly<UnwrapNestedRefs<T & Record<any, any>>>' is not assignable to type 'T'.
  'T | DeepReadonly<UnwrapNestedRefs<T & Record<any, any>>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
    Type 'DeepReadonly<UnwrapNestedRefs<T & Record<any, any>>>' is not assignable to type 'T'.
      'DeepReadonly<UnwrapNestedRefs<T & Record<any, any>>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
        Type '(undefined & UnwrapNestedRefs<T & Record<any, any>>) | (null & UnwrapNestedRefs<T & Record<any, any>>) | ... 10 more ... | (UnwrapNestedRefs<...> extends Map<...> ? ReadonlyMap<...> : UnwrapNestedRefs<...> extends ReadonlyMap<...> ? ReadonlyMap<...> : UnwrapNestedRefs<...> extends WeakMap<...> ? WeakMap<...> : Unwra...' is not assignable to type 'T'.
          '(undefined & UnwrapNestedRefs<T & Record<any, any>>) | (null & UnwrapNestedRefs<T & Record<any, any>>) | ... 10 more ... | (UnwrapNestedRefs<...> extends Map<...> ? ReadonlyMap<...> : UnwrapNestedRefs<...> extends ReadonlyMap<...> ? ReadonlyMap<...> : UnwrapNestedRefs<...> extends WeakMap<...> ? WeakMap<...> : Unwra...' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
            Type 'undefined & UnwrapNestedRefs<T & Record<any, any>>' is not assignable to type 'T'.
              'undefined & UnwrapNestedRefs<T & Record<any, any>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                Type 'DeepReadonly<Ref<any> & T & Record<any, any>> | DeepReadonly<UnwrapRef<T & Record<any, any>>>' is not assignable to type 'T'.
                  'DeepReadonly<Ref<any> & T & Record<any, any>> | DeepReadonly<UnwrapRef<T & Record<any, any>>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                    Type 'DeepReadonly<UnwrapRef<T & Record<any, any>>>' is not assignable to type 'T'.
                      'DeepReadonly<UnwrapRef<T & Record<any, any>>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                        Type '(undefined & UnwrapRef<T & Record<any, any>>) | (null & UnwrapRef<T & Record<any, any>>) | (string & UnwrapRef<T & Record<any, any>>) | ... 9 more ... | (UnwrapRef<...> extends Map<...> ? ReadonlyMap<...> : UnwrapRef<...> extends ReadonlyMap<...> ? ReadonlyMap<...> : UnwrapRef<...> extends WeakMap<...> ? WeakMap<......' is not assignable to type 'T'.
                          '(undefined & UnwrapRef<T & Record<any, any>>) | (null & UnwrapRef<T & Record<any, any>>) | (string & UnwrapRef<T & Record<any, any>>) | ... 9 more ... | (UnwrapRef<...> extends Map<...> ? ReadonlyMap<...> : UnwrapRef<...> extends ReadonlyMap<...> ? ReadonlyMap<...> : UnwrapRef<...> extends WeakMap<...> ? WeakMap<......' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                            Type 'undefined & UnwrapRef<T & Record<any, any>>' is not assignable to type 'T'.
                              'undefined & UnwrapRef<T & Record<any, any>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                                Type 'Readonly<unknown>' is not assignable to type 'T'.
                                  'Readonly<unknown>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
packages/reactivity/src/collectionHandlers.ts
Error: /vue-next/packages/reactivity/src/collectionHandlers.ts(24,3): semantic error TS2322: Type 'T | DeepReadonly<UnwrapNestedRefs<T & Record<any, any>>>' is not assignable to type 'T'.
  'T | DeepReadonly<UnwrapNestedRefs<T & Record<any, any>>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
    Type 'DeepReadonly<UnwrapNestedRefs<T & Record<any, any>>>' is not assignable to type 'T'.
      'DeepReadonly<UnwrapNestedRefs<T & Record<any, any>>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
        Type '(undefined & UnwrapNestedRefs<T & Record<any, any>>) | (null & UnwrapNestedRefs<T & Record<any, any>>) | ... 10 more ... | (UnwrapNestedRefs<...> extends Map<...> ? ReadonlyMap<...> : UnwrapNestedRefs<...> extends ReadonlyMap<...> ? ReadonlyMap<...> : UnwrapNestedRefs<...> extends WeakMap<...> ? WeakMap<...> : Unwra...' is not assignable to type 'T'.
          '(undefined & UnwrapNestedRefs<T & Record<any, any>>) | (null & UnwrapNestedRefs<T & Record<any, any>>) | ... 10 more ... | (UnwrapNestedRefs<...> extends Map<...> ? ReadonlyMap<...> : UnwrapNestedRefs<...> extends ReadonlyMap<...> ? ReadonlyMap<...> : UnwrapNestedRefs<...> extends WeakMap<...> ? WeakMap<...> : Unwra...' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
            Type 'undefined & UnwrapNestedRefs<T & Record<any, any>>' is not assignable to type 'T'.
              'undefined & UnwrapNestedRefs<T & Record<any, any>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                Type 'DeepReadonly<Ref<any> & T & Record<any, any>> | DeepReadonly<UnwrapRef<T & Record<any, any>>>' is not assignable to type 'T'.
                  'DeepReadonly<Ref<any> & T & Record<any, any>> | DeepReadonly<UnwrapRef<T & Record<any, any>>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                    Type 'DeepReadonly<UnwrapRef<T & Record<any, any>>>' is not assignable to type 'T'.
                      'DeepReadonly<UnwrapRef<T & Record<any, any>>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                        Type '(undefined & UnwrapRef<T & Record<any, any>>) | (null & UnwrapRef<T & Record<any, any>>) | (string & UnwrapRef<T & Record<any, any>>) | ... 9 more ... | (UnwrapRef<...> extends Map<...> ? ReadonlyMap<...> : UnwrapRef<...> extends ReadonlyMap<...> ? ReadonlyMap<...> : UnwrapRef<...> extends WeakMap<...> ? WeakMap<......' is not assignable to type 'T'.
                          '(undefined & UnwrapRef<T & Record<any, any>>) | (null & UnwrapRef<T & Record<any, any>>) | (string & UnwrapRef<T & Record<any, any>>) | ... 9 more ... | (UnwrapRef<...> extends Map<...> ? ReadonlyMap<...> : UnwrapRef<...> extends ReadonlyMap<...> ? ReadonlyMap<...> : UnwrapRef<...> extends WeakMap<...> ? WeakMap<......' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                            Type 'undefined & UnwrapRef<T & Record<any, any>>' is not assignable to type 'T'.
                              'undefined & UnwrapRef<T & Record<any, any>>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
                                Type 'Readonly<unknown>' is not assignable to type 'T'.
                                  'Readonly<unknown>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'unknown'.
    at error (/vue-next/node_modules/rollup/dist/shared/rollup.js:5210:30)
    at throwPluginError (/vue-next/node_modules/rollup/dist/shared/rollup.js:17817:12)
    at Object.error (/vue-next/node_modules/rollup/dist/shared/rollup.js:18436:24)
    at Object.error (/vue-next/node_modules/rollup/dist/shared/rollup.js:17990:38)
    at RollupContext.error (/vue-next/node_modules/rollup-plugin-typescript2/src/rollupcontext.ts:37:18)
    at /vue-next/node_modules/rollup-plugin-typescript2/src/print-diagnostics.ts:41:11
    at arrayEach (/vue-next/node_modules/rollup-plugin-typescript2/node_modules/lodash/lodash.js:516:11)
    at Function.forEach (/vue-next/node_modules/rollup-plugin-typescript2/node_modules/lodash/lodash.js:9368:14)
    at _.each (/vue-next/node_modules/rollup-plugin-typescript2/src/print-diagnostics.ts:9:2)
    at Object.transform (/vue-next/node_modules/rollup-plugin-typescript2/src/index.ts:242:5)
(node:17) UnhandledPromiseRejectionWarning: Error: Command failed with exit code 1: rollup -c --environment COMMIT:8dda987,NODE_ENV:production,TARGET:reactivity,TYPES:true
    at makeError (/vue-next/node_modules/execa/lib/error.js:59:11)
    at handlePromise (/vue-next/node_modules/execa/index.js:114:26)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
    at async build (/vue-next/scripts/build.js:75:3)
    at async buildAll (/vue-next/scripts/build.js:54:5)
    at async run (/vue-next/scripts/build.js:44:5)
(Use `node --trace-warnings ...` to show where the warning was created)
(node:17) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)
(node:17) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.

=== tests/cases/conformance/jsdoc/declarations/conn.js ===
/**
 * @typedef {string | number} Whatever
 */

class Conn {
>Conn : Conn

    constructor() {}
    item = 3;
>item : number
>3 : 3

    method() {}
>method : () => void
}

module.exports = Conn;
>module.exports = Conn : typeof Conn
>module.exports : typeof Conn
>module : { "\"tests/cases/conformance/jsdoc/declarations/conn\"": typeof Conn; }
>exports : typeof Conn
>Conn : typeof Conn

=== tests/cases/conformance/jsdoc/declarations/usage.js ===
/**
 * @typedef {import("./conn")} Conn
 */

class Wrap {
>Wrap : Wrap

    /**
     * @param {Conn} c
     */
    constructor(c) {
>c : import("tests/cases/conformance/jsdoc/declarations/conn")

        this.connItem = c.item;
>this.connItem = c.item : number
>this.connItem : any
>this : this
>connItem : any
>c.item : number
>c : import("tests/cases/conformance/jsdoc/declarations/conn")
>item : number

        /** @type {import("./conn").Whatever} */
        this.another = "";
>this.another = "" : ""
>this.another : import("tests/cases/conformance/jsdoc/declarations/conn").Whatever
>this : this
>another : import("tests/cases/conformance/jsdoc/declarations/conn").Whatever
>"" : ""
    }
}

module.exports = {
>module.exports = {    Wrap} : typeof import("tests/cases/conformance/jsdoc/declarations/usage")
>module.exports : typeof import("tests/cases/conformance/jsdoc/declarations/usage")
>module : { "\"tests/cases/conformance/jsdoc/declarations/usage\"": typeof import("tests/cases/conformance/jsdoc/declarations/usage"); }
>exports : typeof import("tests/cases/conformance/jsdoc/declarations/usage")
>{    Wrap} : { Wrap: typeof Wrap; }

    Wrap
>Wrap : typeof Wrap

};

